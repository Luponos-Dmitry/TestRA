Процедура ПровестиДокумент(Отказ, Ссылка) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиТоваров");
	Блокировка.Заблокировать();    
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ПриходТовараПереченьТоваров.Ссылка КАК Ссылка,
	|	ПриходТовараПереченьТоваров.Ссылка.Дата КАК Дата,
	|	ПриходТовараПереченьТоваров.Ссылка.Организация КАК Организация,
	|	ПриходТовараПереченьТоваров.Товар КАК Товар,
	|	ПриходТовараПереченьТоваров.Количество КАК Количество,
	|	ЛОЖЬ КАК ЭтоРасход
	|ПОМЕСТИТЬ вт_ДокументыКПроведению
	|ИЗ
	|	Документ.ПриходТовара.ПереченьТоваров КАК ПриходТовараПереченьТоваров
	|ГДЕ
	|	НЕ ПриходТовараПереченьТоваров.Ссылка.ПометкаУдаления
	|	И ПриходТовараПереченьТоваров.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходТовараПереченьТоваров.Ссылка,
	|	РасходТовараПереченьТоваров.Ссылка.Дата,
	|	РасходТовараПереченьТоваров.Ссылка.Организация,
	|	РасходТовараПереченьТоваров.Товар,
	|	РасходТовараПереченьТоваров.Количество,
	|	ИСТИНА
	|ИЗ
	|	Документ.РасходТовара.ПереченьТоваров КАК РасходТовараПереченьТоваров
	|ГДЕ
	|	НЕ РасходТовараПереченьТоваров.Ссылка.ПометкаУдаления
	|	И РасходТовараПереченьТоваров.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТоваровОстаткиИОбороты.Организация КАК Организация,
	|	ОстаткиТоваровОстаткиИОбороты.Товар КАК Товар,
	|	ЕСТЬNULL(ОстаткиТоваровОстаткиИОбороты.ОстатокНачальныйОстаток, 0) КАК ТоварОстаток,
	|	ОстаткиТоваровОстаткиИОбороты.Период КАК ДатаОстатка
	|ПОМЕСТИТЬ вт_ОстаткиПоДатам
	|ИЗ
	|	РегистрНакопления.ОстаткиТоваров.ОстаткиИОбороты(, , Регистратор, , ) КАК ОстаткиТоваровОстаткиИОбороты
	|ГДЕ
	|	КОНЕЦПЕРИОДА(ОстаткиТоваровОстаткиИОбороты.Период, ДЕНЬ) В
	|			(ВЫБРАТЬ
	|				КОНЕЦПЕРИОДА(вт_ДокументыКПроведению.Дата, ДЕНЬ)
	|			ИЗ
	|				вт_ДокументыКПроведению)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ДокументыКПроведению.Ссылка КАК Ссылка,
	|	вт_ДокументыКПроведению.Дата КАК Дата,
	|	вт_ДокументыКПроведению.Организация КАК Организация,
	|	вт_ДокументыКПроведению.Товар КАК Товар,
	|	вт_ДокументыКПроведению.Количество КАК Количество,
	|	вт_ДокументыКПроведению.ЭтоРасход КАК ЭтоРасход,
	|	МАКСИМУМ(ЕСТЬNULL(вт_ОстаткиПоДатам.ТоварОстаток, 0)) КАК ТоварОстаток
	|ИЗ
	|	вт_ДокументыКПроведению КАК вт_ДокументыКПроведению
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ОстаткиПоДатам КАК вт_ОстаткиПоДатам
	|		ПО вт_ДокументыКПроведению.Ссылка.Дата <= вт_ОстаткиПоДатам.ДатаОстатка
	|			И вт_ДокументыКПроведению.Организация = вт_ОстаткиПоДатам.Организация
	|			И вт_ДокументыКПроведению.Товар = вт_ОстаткиПоДатам.Товар
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ДокументыКПроведению.Ссылка,
	|	вт_ДокументыКПроведению.Дата,
	|	вт_ДокументыКПроведению.Организация,
	|	вт_ДокументыКПроведению.Товар,
	|	вт_ДокументыКПроведению.Количество,
	|	вт_ДокументыКПроведению.ЭтоРасход";	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ДокументыНаПроведение = Запрос.Выполнить(); 
	ТаблицаКОпределениюОстатков = ДокументыНаПроведение.Выгрузить();
	
	Для Каждого Строка Из ТаблицаКОпределениюОстатков Цикл
		
		
		Если Строка.ЭтоРасход Тогда

		НайденаЗапись = ТаблицаКОпределениюОстатков.НайтиСтроки(Новый Структура("Товар", Строка.Товар));
		Если НайденаЗапись.Количество() = 0 Тогда 
			Отказ = Истина;
			//Прервать;
			Сообщить("Недостаточно товара: " + Строка(Строка.Товар) + " , в наличии: 0");
			Продолжить; //Остатков нет, поэтому дальше цикл не выполнять
		КонецЕсли;
		
		Остаток = НайденаЗапись[0].Количество;
		Если Строка.Количество > Остаток Тогда
			Отказ = Истина;
			Сообщить("Недостаточно товара: " + Строка(Строка.Товар) + " , в наличии: " 
			+ Строка(Остаток));
		КонецЕсли;
		
		Если Отказ Тогда
			
			Возврат;
			
		КонецЕсли; 
		
		НаборЗаписейРегистра = РегистрыНакопления.ОстаткиТоваров.СоздатьНаборЗаписей();
		НаборЗаписейРегистра.Отбор.Регистратор.Установить(Строка.Ссылка);
		ЗаписьВРегистр = НаборЗаписейРегистра.Добавить();
		ЗаписьВРегистр.Товар = Строка.Товар;
		ЗаписьВРегистр.Организация = Строка.Организация;
		ЗаписьВРегистр.Период = Строка.Дата;
		ЗаписьВРегистр.ВидДвижения = ВидДвиженияНакопления.Расход;	
		ЗаписьВРегистр.Остаток = Строка.Количество;
		НаборЗаписейРегистра.Записать();
		
	Иначе 
		НаборЗаписейРегистра = РегистрыНакопления.ОстаткиТоваров.СоздатьНаборЗаписей();
		НаборЗаписейРегистра.Отбор.Регистратор.Установить(Строка.Ссылка);
		ЗаписьВРегистр = НаборЗаписейРегистра.Добавить();
		ЗаписьВРегистр.Товар = Строка.Товар;
		ЗаписьВРегистр.Организация = Строка.Организация;
		ЗаписьВРегистр.Период = Строка.Дата;
		ЗаписьВРегистр.ВидДвижения = ВидДвиженияНакопления.Приход;
		ЗаписьВРегистр.Остаток = Строка.Количество;
		НаборЗаписейРегистра.Записать()

	КонецЕсли; 	
		
	КонецЦикла;	
	
КонецПроцедуры
