
Процедура ОбработкаПроведения(Отказ, Режим) 
	
	ПроведениеДокументовСервер.ПровестиДокумент(Отказ, Ссылка);

	
	//ТоварыДокумента = ПереченьТоваров.Выгрузить(); //Выгрузка из табличной части в ТабЗнач
	//ТоварыДокумента.Свернуть("Товар", "Количество"); // Сворачивам результаты (Количество суммируется в разрезе группы товар)
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	//               |	ОстаткиТоваровОстатки.Организация КАК Организация,
	//               |	ОстаткиТоваровОстатки.Товар КАК Товар,
	//               |	СУММА(ОстаткиТоваровОстатки.ОстатокОстаток) КАК Остаток
	//               |ИЗ
	//               |	РегистрНакопления.ОстаткиТоваров.Остатки(НАЧАЛОПЕРИОДА(&ДатаОстатка, МИНУТА), ) КАК ОстаткиТоваровОстатки
	//               |ГДЕ
	//               |	ОстаткиТоваровОстатки.Организация = &Организация
	//               |	И ОстаткиТоваровОстатки.Товар В(&Товары)
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ОстаткиТоваровОстатки.Организация,
	//               |	ОстаткиТоваровОстатки.Товар
	//               |
	//               |ИМЕЮЩИЕ
	//               |	СУММА(ОстаткиТоваровОстатки.ОстатокОстаток) > 0
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	Товар"; 
	//
	//Запрос.УстановитьПараметр("ДатаОстатка", Дата);
	//Запрос.УстановитьПараметр("Организация", Организация);
	//Запрос.УстановитьПараметр("Товары", ТоварыДокумента.ВыгрузитьКолонку("Товар")); // только те товары, которые запрошены в документе
	//ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	//Для Каждого Строка Из ТоварыДокумента Цикл
	//	
	//	НайденаЗапись = ТаблицаРезультат.НайтиСтроки(Новый Структура("Товар", Строка.Товар));
	//	Если НайденаЗапись.Количество() = 0 Тогда 
	//		Отказ = Истина;
	//		//Прервать;
	//		Сообщить("Недостаточно товара: " + Строка(Строка.Товар) + " , в наличии: 0");
	//		Продолжить; //Остатков нет, поэтому дальше цикл не выполнять
	//	КонецЕсли;
	//	
	//	Остаток = НайденаЗапись[0].Остаток;
	//	Если Строка.Количество > Остаток Тогда
	//		Отказ = Истина;
	//		Сообщить("Недостаточно товара: " + Строка(Строка.Товар) + " , в наличии: " 
	//				+ Строка(Остаток));
	//	КонецЕсли;

	//КонецЦикла;	
	//
	//Если Отказ Тогда

	//	Возврат;

	//КонецЕсли; 
	//
	////{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//// Данный фрагмент построен конструктором.
	//// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//// регистр ОстаткиТоваров Расход
	//Движения.ОстаткиТоваров.Записывать = Истина;
	//Для Каждого ТекСтрокаПереченьТоваров Из ПереченьТоваров Цикл
	//	Движение = Движения.ОстаткиТоваров.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//	Движение.Период = Дата;
	//	Движение.Товар = ТекСтрокаПереченьТоваров.Товар;
	//	Движение.Организация = Организация;
	//	Движение.Остаток = ТекСтрокаПереченьТоваров.Количество;
	//КонецЦикла;

	// регистр СредняяЦена
	Для Каждого ТекСтрокаПереченьТоваров Из ПереченьТоваров Цикл
	Движения.СредняяЦена.Записывать = Истина;
	Движение = Движения.СредняяЦена.Добавить();
	Движение.Период = Дата;
	Движение.Документ = Ссылка;
	Движение.Товар = ТекСтрокаПереченьТоваров.Товар;
	Движение.Цена = ТекСтрокаПереченьТоваров.Цена/ТекСтрокаПереченьТоваров.Количество;
	КонецЦикла;


	// регистр ОборотыТоваров
	Для Каждого ТекСтрокаПереченьТоваров Из ПереченьТоваров Цикл

	Движения.ОборотыТоваров.Записывать = Истина;
	Движение = Движения.ОборотыТоваров.Добавить();
	Движение.Период = Дата;
	Движение.Товар = ТекСтрокаПереченьТоваров.Товар;
	Движение.Организация = Организация;
	Движение.Количество = ТекСтрокаПереченьТоваров.Количество;
	КонецЦикла;

	
	
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ 
	КонецПроцедуры
